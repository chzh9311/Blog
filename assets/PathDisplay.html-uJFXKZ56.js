import{_ as o,c as l,a as s,b as a,d as t,e,o as i,r as c}from"./app-0xUsLmj9.js";const u="/Blog/assets/addmarker-marked-BEjPOUDr.jpg",r="/Blog/assets/possibleerror-Upc8Piqb.jpg",d="/Blog/assets/success-nj56oSVu.jpg",k={},v={href:"http://wiki.ros.org",target:"_blank",rel:"noopener noreferrer"},m={href:"http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html",target:"_blank",rel:"noopener noreferrer"},b={href:"http://wiki.ros.org/rviz/Tutorials/Markers%3A%20Basic%20Shapes",target:"_blank",rel:"noopener noreferrer"},h={href:"http://wiki.ros.org/rviz/Tutorials/Markers%3A%20Points%20and%20Lines",target:"_blank",rel:"noopener noreferrer"},g={href:"http://docs.ros.org/api/visualization_msgs/html/msg/Marker.html",target:"_blank",rel:"noopener noreferrer"};function f(_,n){const p=c("ExternalLinkIcon");return i(),l("div",null,[n[10]||(n[10]=s("h2",{id:"写在前面",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#写在前面"},[s("span",null,"写在前面")])],-1)),n[11]||(n[11]=s("p",null,[a("最近有道作业题需要将机器人的历史路径显示出来，但是网上很多相关的教程都是搬运了官网的链接，并没有详细的操作流程。。。因此我又花费了很多时间去 ros 官网上学习 marker 的用法，学习怎么写 publisher 和 subscriber，最终成功将路径显示了出来。这篇文章是对这个过程的详细的介绍，原理和代码实践部分会分开，因此如果你赶时间只要一个结果的话，把详细的讲解跳过即可。不过我还是推荐看完，毕竟"),s("s",null,"我花了这么多精力来写"),a("知其然也要知其所以然。")],-1)),n[12]||(n[12]=s("p",null,"（我是 ROS 新手，从作业这一点也应该看出来了 XD，有不对的地方欢迎指正）",-1)),n[13]||(n[13]=s("h2",{id:"你应该已经完成了的准备工作",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#你应该已经完成了的准备工作"},[s("span",null,"你应该已经完成了的准备工作")])],-1)),s("ul",null,[s("li",null,[n[1]||(n[1]=a("已经配置好了 ROS工作环境。这一点不用多说，参考 ")),s("a",v,[n[0]||(n[0]=a("ROS wiki")),t(p)]),n[2]||(n[2]=a("。"))]),n[3]||(n[3]=s("li",null,"这里我用的是 Gazebo 仿真环境和 RVIZ 可视化工具，这两个东西是安装ros时用官网上那个最全的安装包里自带（这里展示的是 kinetic 版本的安装命令，其他的版本到上面的链接里面找）：",-1))]),n[14]||(n[14]=e(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ros-kinetic-desktop-full</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>已经跟着 ROS wiki 建立了 catkin 工作区，我这里的工作区就是 wiki 上的 <code>~/catkin_ws</code>，如果你的不是在用户根目录下记得在后面执行命令的时候改掉。</p></li><li><p>工作区目录下的 <code>src</code> 目录在系统的 <code>ROS_PACKAGE_PATH</code> 环境变量中，不在的话可以这样设置：</p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">ROS_PACKAGE_PATH</span><span class="token operator">=</span><span class="token variable">\${ROS_PACKAEG_PATH}</span><span class="token builtin class-name">:</span><span class="token variable">\${<span class="token environment constant">HOME</span>}</span>/catkin_ws/src</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="写路径显示的执行结点" tabindex="-1"><a class="header-anchor" href="#写路径显示的执行结点"><span>写路径显示的执行结点</span></a></h2><p>首先要创建一个 package，名为 <code>show_path</code>。如果用 python 倒是不需要，可我这用的是 C++：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token builtin class-name">cd</span> ~/catkin_ws/src</span>
<span class="line">$ catkin_create_pkg show_path std_msgs roscpp visualization_msgs tf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="源代码" tabindex="-1"><a class="header-anchor" href="#源代码"><span>源代码</span></a></h3><p>将下面的代码放进一个 cpp 文件，放在刚建好的 package 下的 src 目录下。即<code>~/catkin_ws/src/show_path/src/</code></p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ros/ros.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;tf/transform_listener.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;visualization_msgs/Marker.h&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  ros<span class="token double-colon punctuation">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">&quot;showpath&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  ros<span class="token double-colon punctuation">::</span>NodeHandle n<span class="token punctuation">;</span></span>
<span class="line">  ros<span class="token double-colon punctuation">::</span>Publisher marker_pub <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">advertise</span><span class="token generic class-name"><span class="token operator">&lt;</span>visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;visualization_marker&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  ros<span class="token double-colon punctuation">::</span>Rate <span class="token function">r</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  tf<span class="token double-colon punctuation">::</span>TransformListener listener<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>ros<span class="token double-colon punctuation">::</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    r<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  visualization_msgs<span class="token double-colon punctuation">::</span>Marker points<span class="token punctuation">,</span> line_strip<span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&quot;/map&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> ros<span class="token double-colon punctuation">::</span><span class="token class-name">Time</span><span class="token double-colon punctuation">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>ns <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>ns <span class="token operator">=</span> <span class="token string">&quot;showpath&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>action <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>action <span class="token operator">=</span> visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token double-colon punctuation">::</span>ADD<span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span>w <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  points<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  line_strip<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  points<span class="token punctuation">.</span>type <span class="token operator">=</span> visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token double-colon punctuation">::</span>POINTS<span class="token punctuation">;</span></span>
<span class="line">  line_strip<span class="token punctuation">.</span>type <span class="token operator">=</span> visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token double-colon punctuation">::</span>LINE_STRIP<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  line_strip<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0.05</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  line_strip<span class="token punctuation">.</span>color<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line">  line_strip<span class="token punctuation">.</span>color<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">float</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">y</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">int</span> <span class="token function">cnt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span>ros<span class="token double-colon punctuation">::</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">{</span></span>
<span class="line">    tf<span class="token double-colon punctuation">::</span>StampedTransform transform<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">{</span></span>
<span class="line">      listener<span class="token punctuation">.</span><span class="token function">lookupTransform</span><span class="token punctuation">(</span><span class="token string">&quot;/map&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/base_footprint&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                               ros<span class="token double-colon punctuation">::</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> transform<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">catch</span> <span class="token punctuation">(</span>tf<span class="token double-colon punctuation">::</span>TransformException ex<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">ROS_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span>ex<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      ros<span class="token double-colon punctuation">::</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    x <span class="token operator">=</span> transform<span class="token punctuation">.</span><span class="token function">getOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    y <span class="token operator">=</span> transform<span class="token punctuation">.</span><span class="token function">getOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    geometry_msgs<span class="token double-colon punctuation">::</span>Point p<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>line_strip<span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token punctuation">{</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    marker_pub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>line_strip<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    r<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="源代码详解" tabindex="-1"><a class="header-anchor" href="#源代码详解"><span>源代码详解</span></a></h3><p>下面我分块讲解以下本例中的源代码，方便大家根据需要更改。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ros/ros.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;tf/transform_listener.h&gt;</span></span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;visualization_msgs/Marker.h&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)),s("p",null,[n[5]||(n[5]=a("引入必要的头文件。ros.h 是 C++ 的 api；transform_listener.h 的引入是为了获取机器人的坐标；Marker.h 则是 ros 的 message，本方法的主角。关于 Marker 的详细介绍参照 ROS 的 ")),s("a",m,[n[4]||(n[4]=a("Marker参考页")),t(p)]),n[6]||(n[6]=a("。"))]),n[15]||(n[15]=e(`<div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">  ros<span class="token double-colon punctuation">::</span><span class="token function">init</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">,</span> <span class="token string">&quot;showpath&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  ros<span class="token double-colon punctuation">::</span>NodeHandle n<span class="token punctuation">;</span></span>
<span class="line">  ros<span class="token double-colon punctuation">::</span>Publisher marker_pub <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">advertise</span><span class="token generic class-name"><span class="token operator">&lt;</span>visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;visualization_marker&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  ros<span class="token double-colon punctuation">::</span>Rate <span class="token function">r</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  tf<span class="token double-colon punctuation">::</span>TransformListener listener<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化结点，命名为 “showpath”，发布话题为 “visualization_marker”，频率为 10。同时声明tf坐标听者对象 <code>listener</code>。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>ros<span class="token double-colon punctuation">::</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    r<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等待 ros 连接</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">  visualization_msgs<span class="token double-colon punctuation">::</span>Marker points<span class="token punctuation">,</span> line_strip<span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&quot;/map&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> ros<span class="token double-colon punctuation">::</span><span class="token class-name">Time</span><span class="token double-colon punctuation">::</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>ns <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>ns <span class="token operator">=</span> <span class="token string">&quot;showpath&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>action <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>action <span class="token operator">=</span> visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token double-colon punctuation">::</span>ADD<span class="token punctuation">;</span></span>
<span class="line">  points<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span>w <span class="token operator">=</span> line_strip<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义了两个对象并且将它们初始化：</p><ul><li><code>points</code> 是点，并不显示，但是是组成线的基本单元。</li><li><code>line_strip</code> 是线，用于标示历史路径。</li></ul><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">  points<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  line_strip<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>前面 <code>points</code> 和 <code>line_strip</code> 共用同一个 namespace 即 <code>showpath</code>，这里把两者的id作出区别以免发生冲突。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">  points<span class="token punctuation">.</span>type <span class="token operator">=</span> visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token double-colon punctuation">::</span>POINTS<span class="token punctuation">;</span></span>
<span class="line">  line_strip<span class="token punctuation">.</span>type <span class="token operator">=</span> visualization_msgs<span class="token double-colon punctuation">::</span>Marker<span class="token double-colon punctuation">::</span>LINE_STRIP<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置两种 Marker 的种类。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">  line_strip<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0.05</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  line_strip<span class="token punctuation">.</span>color<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line">  line_strip<span class="token punctuation">.</span>color<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置轨迹的宽度 (<code>scale</code>) 和颜色 (<code>color</code>)。这里设置宽度为 0.05， 颜色为蓝色不透明。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">tf<span class="token double-colon punctuation">::</span>StampedTransform transform<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">{</span></span>
<span class="line">      listener<span class="token punctuation">.</span><span class="token function">lookupTransform</span><span class="token punctuation">(</span><span class="token string">&quot;/map&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/base_footprint&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                               ros<span class="token double-colon punctuation">::</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> transform<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">catch</span> <span class="token punctuation">(</span>tf<span class="token double-colon punctuation">::</span>TransformException ex<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">ROS_ERROR</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span>ex<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      ros<span class="token double-colon punctuation">::</span><span class="token function">Duration</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在连接的时间内，持续获取 <code>/map</code> 到 <code>/base_footprint</code> 的坐标，也就是机器人在地图上的坐标，返回到 <code>listener</code> 对象中。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">    x <span class="token operator">=</span> transform<span class="token punctuation">.</span><span class="token function">getOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    y <span class="token operator">=</span> transform<span class="token punctuation">.</span><span class="token function">getOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    geometry_msgs<span class="token double-colon punctuation">::</span>Point p<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span></span>
<span class="line">    p<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>取出机器人在地图上的坐标，并且记录在点 <code>p</code> 内。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>line_strip<span class="token punctuation">.</span>points<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token punctuation">{</span>cnt<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>将点 <code>p</code> 加入 <code>line_strip</code> 内的点队列内。排除掉第一个点，第一个点<strong>有可能</strong>会初始化到原点，使路径中出现一段不该有的直线。当然，只是我个人遇到的问题，不敢说一定会这这样。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">    marker_pub<span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>line_strip<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    r<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发布话题以及必要的 <code>sleep</code>.</p><h3 id="后续工作" tabindex="-1"><a class="header-anchor" href="#后续工作"><span>后续工作</span></a></h3><p>在<strong>刚建立的 package 里的</strong> CMakeList.txt 中加入以下两行：</p><div class="language-cmake line-numbers-mode" data-highlighter="prismjs" data-ext="cmake" data-title="cmake"><pre><code><span class="line"><span class="token keyword">add_executable</span><span class="token punctuation">(</span>showpath src/showpath.cpp<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>showpath <span class="token punctuation">\${</span>catkin_LIBRARIES<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>之后就可以开始愉快地 make 啦。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token builtin class-name">cd</span> ~/catkin_ws</span>
<span class="line">$ catkin_make</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>之后</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ <span class="token builtin class-name">source</span> devel/setup.bash</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="显示路径" tabindex="-1"><a class="header-anchor" href="#显示路径"><span>显示路径</span></a></h2><p>首先还是将 turtlebot 放进我们的仿真环境。这里就用默认的做个范例：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ roslaunch turtlebot_gazebo turtlebot_world.launch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后，启动自动导航，调出地图。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ roslaunch turtlebot_gazebo amcl_demo.launch</span>
<span class="line">$ roslaunch turtlebot_rviz_launchers view_navigation.launch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在rviz里订阅 <code>Marker</code> 话题：点击左下角的 “add”，在弹出的对话框中选择 Marker。</p><p><img src="`+u+`" alt=""></p><p>获取坐标需要一定的历史信息，所以可以先让机器人运动一下，再启动 <code>showpath</code> 节点：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">$ rosrun show_path showpath</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可能会有这样的报错信息，忽略就好，不影响最终效果（如果有知道为什么请赐教，在此谢过）</p><p><img src="`+r+'" alt=""></p><p>给机器人定个目标位姿，导航过去就可以看到路径用蓝色线条标出来啦。</p><p><img src="'+d+'" alt=""></p><p>PS:虽然这里是用导航来移动机器人的，但是我们标记历史路径的程序并没有用到导航信息。事实上这里用别的方式去移动机器人，也是可以画出路径的，只是，没有地图的话，这个路径的意义就不是那么明显了。</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h2>',43)),s("ul",null,[s("li",null,[s("a",b,[n[7]||(n[7]=a("Marker 基础形状教程")),t(p)])]),s("li",null,[s("a",h,[n[8]||(n[8]=a("Marker 点和线教程")),t(p)])]),s("li",null,[s("a",g,[n[9]||(n[9]=a("Marker参考页")),t(p)])])])])}const w=o(k,[["render",f],["__file","PathDisplay.html.vue"]]),x=JSON.parse('{"path":"/blogs/Debug/PathDisplay.html","title":"RVIZ中利用markers标记历史路径","lang":"en-US","frontmatter":{"title":"RVIZ中利用markers标记历史路径","date":"2020-07-10T00:00:00.000Z","tags":["ROS","Simulation"],"categories":["技术指南"]},"headers":[{"level":2,"title":"写在前面","slug":"写在前面","link":"#写在前面","children":[]},{"level":2,"title":"你应该已经完成了的准备工作","slug":"你应该已经完成了的准备工作","link":"#你应该已经完成了的准备工作","children":[]},{"level":2,"title":"写路径显示的执行结点","slug":"写路径显示的执行结点","link":"#写路径显示的执行结点","children":[{"level":3,"title":"源代码","slug":"源代码","link":"#源代码","children":[]},{"level":3,"title":"源代码详解","slug":"源代码详解","link":"#源代码详解","children":[]},{"level":3,"title":"后续工作","slug":"后续工作","link":"#后续工作","children":[]}]},{"level":2,"title":"显示路径","slug":"显示路径","link":"#显示路径","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{},"filePathRelative":"blogs/Debug/PathDisplay.md"}');export{w as comp,x as data};
