import{_ as i,c as p,e as t,a as e,b as s,d as l,o,r as c}from"./app-0xUsLmj9.js";const d="/Blog/assets/fixedspaces-h8wkqguk.jpg",r="/Blog/assets/self-defined-kQNtxSri.png",u="/Blog/assets/vspaces-6ul512oL.jpg",h="/Blog/assets/normal-space-DtPgOG4F.png",m="/Blog/assets/fill-UIlL8AxJ.jpg",v={},f={href:"https://tex.stackexchange.com/questions/8260/what-are-the-various-units-ex-em-in-pt-bp-dd-pc-expressed-in-mm",target:"_blank",rel:"noopener noreferrer"},g={href:"https://math-linux.com/latex-26/faq/latex-faq/article/latex-horizontal-space-qquad-hspace-thinspace-enspace",target:"_blank",rel:"noopener noreferrer"},x={href:"https://tex.stackexchange.com/questions/8260/what-are-the-various-units-ex-em-in-pt-bp-dd-pc-expressed-in-mm",target:"_blank",rel:"noopener noreferrer"},k={href:"https://tex.stackexchange.com/questions/4239/which-measurement-units-should-one-use-in-latex",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.giss.nasa.gov/tools/latex/ltx-143.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://tex.stackexchange.com/questions/21022/what-is-the-difference-between-fil-and-fill",target:"_blank",rel:"noopener noreferrer"};function y(q,n){const a=c("ExternalLinkIcon");return o(),p("div",null,[n[20]||(n[20]=t(`<h1 id="讲讲-latex-让人头疼的地方" tabindex="-1"><a class="header-anchor" href="#讲讲-latex-让人头疼的地方"><span>讲讲 Latex 让人头疼的地方</span></a></h1><p>为什么科学文献通常要求用 $\\LaTeX$ 书写呢？当然是因为好看呀。</p><p>$\\LaTeX$ 美观的排版背后是一个庞杂的符号和排版系统，光是看看就知道这根本不是一两天能全部掌握的，就连 $\\LaTeX$ 这个标题也有专门的特殊排版（看着有点奇怪，后面还是直接用 Latex 好了）。有很多符号看上去一样，但是又有十分细微的差别，比如下面的两个单词，你能看出差异吗： $$ Microsoft \\qquad Micr\\omicron s\\omicron ft $$ 说实话我自己也看不出来（或者我用的这个字体本身就没有区别），但上面那一行的的源码是：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Microsoft \\qquad Micr\\omicron s\\omicron ft</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>后一个微软里面的 $\\omicron$ 其实是希腊字母欧米克荣，而不是英文字母 $o$ ！</p><blockquote><p>冷知识：我们用来表示高阶无穷小的符号 $\\omicron$ 是希腊字母。</p></blockquote><p>Latex 的精确性让它更适应于公式的排版，光是空格有多少种，就足够我写一篇了。空字符可以在我们排版时帮助我们对齐一些难以对齐的行或列，在不失 latex 美观的前提下，在细节上实现 word 一样的随意调整。~~不过遇到这种情况时，我并不推荐将空字符作为首选方案。~~了解一下 latex 的空字符还是有必要的。</p><h1 id="各种长度的空格" tabindex="-1"><a class="header-anchor" href="#各种长度的空格"><span>各种长度的空格</span></a></h1><p>Latex 的空格种类繁多，看过来让人眼花缭乱。如果按照长度分类的话，大致可以分为下面三类。即：“只要不换字体，我一直是这么长” 的相对字体长度固定的空格，“你让我多长我就多长” 的自定义长度空格，和 “我多长取决于你把我放在哪里” 的自适应长度空格。</p><h2 id="相对字体长度固定" tabindex="-1"><a class="header-anchor" href="#相对字体长度固定"><span>相对字体长度固定</span></a></h2><p>先看相对字体长度固定的空格，这类空格最简单粗暴，你把它敲出来，它给你一段固定的留白。Latex 本身就有的这类空格并不多，<code>amsmath</code> 包则将这类空格变得更加丰富。</p><p>在往下讲之前，先说明一个长度单位： <code>em</code>.</p><p>这个单位，常用 latex 的小伙伴肯定不陌生，但是具体含义其实众说纷纭。它并不严格地等于字体中 M 的宽度，也并不严格等于字体本身的大小，只需要知道<strong>这个单位会随着字体变化</strong>就行了。</p><p>常用的这类空格，以及它们各自的长度如下表所示：</p><p><img src="`+d+'" alt=""></p><p>有几个需要注意的点：</p><ol><li>**转义符 + 标点 的组合，原则上不要在前后加空格。**相比于标准的<code>a\\,b</code>，加入了空格的 <code>a\\, b</code> 表现出来的空字符其实是 <code>\\,</code> 加上一个常规空格。而常规空格是会适应排版进行调整的，这就导致生成的空格长度不但比想像的长，还不固定。</li><li><code>\\quad</code>, <code>\\thinspace</code> <strong>这类转义符 + 字母的组合，需要在后面打空格</strong>。这时后面加入的空格不会被识别为常规空格，而是单纯作为一个命令结束的标志。但是如果空格加在了命令前面，就会被当做一个常规空格。</li><li>如果上面的字符没有达到想要的长度，<strong>可以进行组合</strong>。比如 <code>\\;\\!</code> 会生成一个 2/18 em 的空格。如果还达不到要求，可以试试下面的自定义长度命令。</li></ol><h2 id="自定义长度" tabindex="-1"><a class="header-anchor" href="#自定义长度"><span>自定义长度</span></a></h2><p>自定义长度的命令会生成一个给定长度的空格，使用起来十分灵活。</p><p>常用的记住 <code>\\hspace</code> 和 <code>\\vspace</code> 即可，前者用于水平方向，后者则用于垂直方向。这两个命令是 latex 原生的，不需要引入任何额外包。</p><p>具体使用很简单，语法是 <code>\\hspace{&lt;space_width&gt;}</code> 在 <code>&lt;space_width&gt;</code> 处填入你期望的长度。</p>',21)),e("p",null,[n[1]||(n[1]=s("下图演示了三个使用案例及其等效的预设空格组合。其中 ")),n[2]||(n[2]=e("code",null,"\\hspace{1em}",-1)),n[3]||(n[3]=s(" 生成的空格和 ")),n[4]||(n[4]=e("code",null,"\\quad",-1)),n[5]||(n[5]=s(" 等长，而 ")),n[6]||(n[6]=e("code",null,"\\hspace{0.11111em}",-1)),n[7]||(n[7]=s(" 生成的空格和 ")),n[8]||(n[8]=e("code",null,"\\;\\!",-1)),n[9]||(n[9]=s(" 等长，这里面甚至可以塞进一个负值，同时也有等长的定长空格组合与之对应。关于长度单位其实有很多可以说道的地方，比如 Latex 中的最小单位 ")),n[10]||(n[10]=e("code",null,"sp",-1)),n[11]||(n[11]=s("，以及各个单位分别等于多少个 ")),n[12]||(n[12]=e("code",null,"sp",-1)),n[13]||(n[13]=s(" 等等，详情见这篇 ")),e("a",f,[n[0]||(n[0]=s("Stackexchange 上的问答")),l(a)]),n[14]||(n[14]=s("。"))]),n[21]||(n[21]=t('<p><img src="'+r+`" alt=""></p><p>而另一个 <code>\\vspace</code> 可能更通用一些，通常用于行间距的微调，包括但不限于图表和标题之间、图表和正文之间、标题和正文之间的距离调整。</p><p>下面我们打一段文字：</p><div class="language-latex line-numbers-mode" data-highlighter="prismjs" data-ext="latex" data-title="latex"><pre><code><span class="line">  <span class="token comment">% ex 近似等于当前字体中 x 的高度</span></span>
<span class="line">  楼下早上好啊！</span>
<span class="line"></span>
<span class="line">  早……怎么这么挤啊！<span class="token function selector">\\vspace</span><span class="token punctuation">{</span>-2ex<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  我要和三楼贴贴!</span>
<span class="line"></span>
<span class="line">  <span class="token function selector">\\vspace</span><span class="token punctuation">{</span>2ex<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  看我干嘛，我就在我该在的位置。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其效果就是这样</p><p><img src="`+u+'" alt=""></p><p>其实，无论 <code>vspace</code> 命令单独一行，还是和上下合并，其效果是一样的，都是在默认行距上进行加减。而相对于水平字距，行间距相对固定，因此不会带来很大的问题。</p><h2 id="自适应长度" tabindex="-1"><a class="header-anchor" href="#自适应长度"><span>自适应长度</span></a></h2><p>这类空格与上述不同，是以良好的排版效果作为第一优先级的。它们会随着期望的效果而改变自身的长度。</p><h3 id="常规空格" tabindex="-1"><a class="header-anchor" href="#常规空格"><span>常规空格</span></a></h3><p>这类空格中最典型的就是常规空格，敲一下键盘上那个最长的空格键，你就输入了一个常规空格。</p><p>中文文献书写中这种空格出场比较少，而英文书写中这个空格可以说是一篇文章中出现最频繁的字符了。为了排版美观，英文文献通常采用两端对齐的方式，但是英文单词又不一样长，经常出现到句尾长度不够，把下一行第一个单词拿到这一行长度又太长的情况。这时，Latex 会通过调整常规空格长度的方式来做到两端对齐。下图这句话出自《卖火柴的小女孩》。</p><p><img src="'+h+`" alt=""></p><h3 id="hfill-和-hfil" tabindex="-1"><a class="header-anchor" href="#hfill-和-hfil"><span>hfill 和 hfil</span></a></h3><p>顾名思义，这两个命令可以起到填充作用。填充效果是<strong>能延伸到的最大宽度</strong>。通常，如果我们有张图片要并列摆放，中间就可以加上 <code>\\hfill</code> 或 <code>\\hfil</code>，可以把两个并排的物件中间撑开，达到一个左对齐，一个右对齐的效果。</p><p>这里用并排的 <code>minipage</code> 做个示范：</p><div class="language-latex line-numbers-mode" data-highlighter="prismjs" data-ext="latex" data-title="latex"><pre><code><span class="line"><span class="token function selector">\\noindent</span><span class="token function selector">\\begin</span><span class="token punctuation">{</span><span class="token keyword">minipage</span><span class="token punctuation">}</span><span class="token punctuation">{</span>0.3<span class="token function selector">\\textwidth</span><span class="token punctuation">}</span></span>
<span class="line">    Most terribly cold it was; it snowed, and was nearly quite dark, and evening - the last evening of the year.</span>
<span class="line"><span class="token function selector">\\end</span><span class="token punctuation">{</span><span class="token keyword">minipage</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token function selector">\\hfill</span> <span class="token comment">% 或 \\hfil</span></span>
<span class="line"><span class="token function selector">\\begin</span><span class="token punctuation">{</span><span class="token keyword">minipage</span><span class="token punctuation">}</span><span class="token punctuation">{</span>0.3<span class="token function selector">\\textwidth</span><span class="token punctuation">}</span></span>
<span class="line">    In this cold and darkness there went along the street a poor little girl, bareheaded, and with naked feet.</span>
<span class="line"><span class="token function selector">\\end</span><span class="token punctuation">{</span><span class="token keyword">minipage</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token function selector">\\hfill</span> <span class="token comment">% 或 \\hfil</span></span>
<span class="line"><span class="token function selector">\\begin</span><span class="token punctuation">{</span><span class="token keyword">minipage</span><span class="token punctuation">}</span><span class="token punctuation">{</span>0.3<span class="token function selector">\\textwidth</span><span class="token punctuation">}</span></span>
<span class="line">    When she left home she had her slippers on, it is true;</span>
<span class="line"><span class="token function selector">\\end</span><span class="token punctuation">{</span><span class="token keyword">minipage</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行效果如下。可以看到三个 <code>minipage</code> 中间被两处等长的空白分隔开了。</p><p><img src="`+m+`" alt=""></p><p>如果把上面两个 <code>\\hfill</code> 都给换成 <code>\\hfil</code>，编译出来的效果是完全一样的。但是，如果只改变其中一个，你就会发现 <code>\\hfil</code> 那里的空格完全消失了。这是为什么呢？</p><p>从定义上讲，<code>fill</code> 和 <code>fil</code> 都是符合排版规则下的无穷大。但是，<code>fill</code> 是比 <code>fil</code> <strong>更为高阶的无穷大</strong>。如果 <code>\\hfill</code> 和 <code>\\hfil</code> 同处一行，那么 <code>\\hfil</code> 将会被 <code>\\hfill</code> 给挤成什么都没有。这一点很好理解，即使是无穷大，在更高阶的无穷大面前也是0。而等阶的无穷大，在同一行时延展出来的空格长度就是相等的了。</p><p>这两条命令同样有垂直版本，即 <code>\\vfill</code> 和 <code>\\vfil</code>，拓展的上限是一整页。同时，也有 <code>\\hfilll</code> 和 <code>\\vfilll</code>，是比两个 <code>l</code> 的 <code>fill</code> 更高阶的无穷大。这里就不多赘述了。</p><h1 id="特殊空格" tabindex="-1"><a class="header-anchor" href="#特殊空格"><span>特殊空格</span></a></h1><h2 id="不折行的空格" tabindex="-1"><a class="header-anchor" href="#不折行的空格"><span>不折行的空格</span></a></h2><p>有时我们需要空格前后的内容一定要在一行中显示，比如图表标题 <code>Fig. 3</code>，<code>Tab. 4</code> 这类，如果断行就很奇怪。Latex 为这种情况提供了一种不折行的空格（Non-breaking space），即 <code>~</code>。只需要写成 <code>Fig.~3</code> 即可。</p><h2 id="命令后的空格" tabindex="-1"><a class="header-anchor" href="#命令后的空格"><span>命令后的空格</span></a></h2><p>有些命令是会在文档中生成一段文字，有时候我们希望能在这段文字后面加个空格。然而无论你在命令后面打多少个空格，latex 都只会把它当成命令结束的标志，生成的文档中这段文字会和后面的文字紧紧贴在一起。</p><p>正确的解决方案是加一个转义符 <code>\\</code> 再打空格，或者用 <code>{}</code> 作为命令终结的标志，来使后面的空格被识别成一个常规空格。即：</p><div class="language-latex line-numbers-mode" data-highlighter="prismjs" data-ext="latex" data-title="latex"><pre><code><span class="line">The date is <span class="token function selector">\\today</span> and it&#39;s raining heavily.</span>
<span class="line"><span class="token comment">% 上面这句运行的结果：</span></span>
<span class="line"><span class="token comment">% The date is February 24, 2021and it’s raining heavily.</span></span>
<span class="line"></span>
<span class="line">The date is <span class="token function selector">\\today</span> <span class="token function selector">\\ </span>and it&#39;s raining heavily.</span>
<span class="line">The date is <span class="token function selector">\\today</span><span class="token punctuation">{</span><span class="token punctuation">}</span> and it&#39;s raining heavily.</span>
<span class="line"><span class="token comment">% 上面两句运行的结果是一样的，即：</span></span>
<span class="line"><span class="token comment">% The date is February 24, 2021 and it’s raining heavily.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h1><p>Latex 里面的空白字符可谓琳琅满目，非一文可以穷尽。在这里我也只是汇总了一些常用的字符，基于我个人理解，有错误之处欢迎指出。</p><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h1>`,32)),e("ul",null,[e("li",null,[e("a",g,[n[15]||(n[15]=s("Latex horizontal space: qquad,hspace, thinspace,enspace")),l(a)])]),e("li",null,[e("a",x,[n[16]||(n[16]=s("What are the various units (ex, em, in, pt, bp, dd, pc) expressed in mm")),l(a)])]),e("li",null,[e("a",k,[n[17]||(n[17]=s("Which measurement uints should one use in latex")),l(a)])]),e("li",null,[e("a",b,[n[18]||(n[18]=s("Spaces and Boxes")),l(a)])]),e("li",null,[e("a",w,[n[19]||(n[19]=s("What is the difference between 'fil' and 'fill' ?")),l(a)])])])])}const $=i(v,[["render",y],["__file","latex-spacing.html.vue"]]),T=JSON.parse('{"path":"/blogs/Tech/latex-spacing.html","title":"Latex 中的各种空格","lang":"en-US","frontmatter":{"title":"Latex 中的各种空格","tags":["latex"],"categories":["技术指南"],"mathjax":true,"date":"2021-02-25T00:00:00.000Z"},"headers":[{"level":2,"title":"相对字体长度固定","slug":"相对字体长度固定","link":"#相对字体长度固定","children":[]},{"level":2,"title":"自定义长度","slug":"自定义长度","link":"#自定义长度","children":[]},{"level":2,"title":"自适应长度","slug":"自适应长度","link":"#自适应长度","children":[{"level":3,"title":"常规空格","slug":"常规空格","link":"#常规空格","children":[]},{"level":3,"title":"hfill 和 hfil","slug":"hfill-和-hfil","link":"#hfill-和-hfil","children":[]}]},{"level":2,"title":"不折行的空格","slug":"不折行的空格","link":"#不折行的空格","children":[]},{"level":2,"title":"命令后的空格","slug":"命令后的空格","link":"#命令后的空格","children":[]}],"git":{},"filePathRelative":"blogs/Tech/latex-spacing.md"}');export{$ as comp,T as data};
